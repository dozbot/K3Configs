[gcode_macro _global_variables]
variable_verbose:     True  # Enable verbose output
gcode:

[gcode_macro START_PRINT]
#   Superslicer start gcode:
# M104 S0 ; Stops PS/SS from sending temp waits separately
# M140 S0
# START_PRINT T_BED={first_layer_bed_temperature[0]} T_EXTRUDER={first_layer_temperature[0]}
gcode:
    {% set bed_temp = params.T_BED|default(65)|float %}
    {% set extruder_temp = params.T_EXTRUDER|default(190)|float %}

    WLED_ON strip=rgb preset=3
    SET_LIGHT VALUE=1
    M190 S{bed_temp}
    BED_MESH_CLEAR
    G28
    Z_TILT_N_SCAN
    #G28 Z
    BED_MESH_CALIBRATE runs=2
    G0 X90 Y90 Z50 F6000
    G90
    G1 Z50 F6000                   ; move nozzle away from bed
    # Rebreather on!
    SET_REBREATHER SPEED=1.0
    M106 S127
    # Hang out over the purge bucket
    #PURGE_MOVE
    M107  
    # If the hotend is already kinda hot, keep it where it is
    {% if printer.extruder.temperature > extruder_temp*0.5 %}
        M104 S{printer.extruder.temperature}
    {% endif %}
    M140 S{bed_temp} 
    M104 S{extruder_temp}
    WLED_ON strip=rgb preset=1
    # Wait
    M190 S{bed_temp}
    M109 S{extruder_temp}
    WLED_ON strip=rgb preset=2
    SET_LIGHT VALUE=1
    Prime_Line

[gcode_macro PRINT_END]
#   Superslicer end gcode:
# PRINT_END
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    TURN_OFF_HEATERS
    G91                            ; relative positioning
    G0 Z1.00 X3.0 Y3.0 F20000    ; move nozzle to remove stringing
    M107                           ; turn off fan
    
    PARK_IT

    # Run the rebreather for 15 minutes after the print
    WLED_ON strip=rgb preset=1
    #SET_LIGHT VALUE=0
    UPDATE_DELAYED_GCODE ID=DELAY_REBREATHER_OFF DURATION={60 * 15}
    
#[gcode_macro G28]
# Only home if needed.
#rename_existing: G28.1
#gcode:
    #{% if printer.toolhead.homed_axes != "xyz" %}
    #{ action_respond_info("Homing before Z_TILT_ADJUST") }
        #G28.1
    #{% endif %}

[gcode_macro M600]
gcode: 
    #G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500
    {% set X = params.X|default(90)|float %}
    {% set Y = params.Y|default(10)|float %}
    {% set Z = params.Z|default(50)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 Z{Z}
    G90
    G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y} F19500
    G91
    G1 E-60 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[delayed_gcode DELAY_REBREATHER_OFF]
gcode:
    SET_REBREATHER SPEED=0.0


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PARK_IT

  # Run the rebreather for 15 minutes after the print
  UPDATE_DELAYED_GCODE ID=DELAY_REBREATHER_OFF DURATION={60 * 15}

  CANCEL_PRINT_BASE
  
[gcode_macro PARK_IT]
gcode:
  {% set zH = 100 %}
  
  # Move the bed down
  {% if printer.toolhead.position.z > zH %}
    {% set zH = printer.toolhead.position.z + 1 %}
  {% endif %}

  G90                           ; absolute positioning
  G0  X90 Y180 Z{zH} F3600      ; park nozzle at rear and drop the bed to at least 50

[gcode_macro SET_REBREATHER]
gcode:
    {% set wanted_speed = params.SPEED|default(-1.0)|float %}
    {% set current_value = printer["fan_generic rebreather"].speed|float %}

    # If no params are provided, turn the rebreather on if its off, or off if its on.
    {% if wanted_speed == -1.0 %}
        {% if current_value == 0.0 %}
            {% set wanted_speed = 0.95 %}
        {% else %}
            {% set wanted_speed = 0.0 %}
        {% endif %}
    {% endif %}	 

    SET_FAN_SPEED FAN=rebreather SPEED={wanted_speed}

[gcode_macro ACCEL_TEST]
description: Test given accel values acorss bed
gcode:
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set min_x = 0 %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set min_y = 0 %}

    # test config
    {% set config = {
      'accel'          : params.ACCEL|default(2500)|int,	# Test accel mm^2/sec
      'speed'          : params.SPEED|default(100)|int,		# Test speed mm/sec
      'wait'           : params.WAIT_MS|default(500)|int,	# Wait mSec between runs
      'x_padding'      : params.XPAD|default(5)|float,  	# padding around min/max x
      'y_padding'      : params.YPAD|default(5)|float,  	# padding around min/max y
    } %}

    SAVE_GCODE_STATE NAME=STATE_ACCEL_TEST

    M220 S100 							# Reset any scaling factors
    M221 S100 							# Reset any scaling factors

    # remove any exisiting clever stuff
    SET_VELOCITY_LIMIT VELOCITY={config.speed} ACCEL={config.accel} ACCEL_TO_DECEL={config.accel}
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

    G1 F{config.speed * 60}
    M204 S{config.accel}

    M117 {config.speed}@{config.accel} X stepper
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G1 X{max_x-config.x_padding} Y{max_y-config.y_padding}
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} Y stepper
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} XY moves
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{min_y+config.y_padding}
    G1 X{min_x+config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{max_y-config.y_padding}
    G1 X{max_x-config.x_padding} Y{min_y+config.y_padding}
    G4 P{config.wait}
    M400

    M117 {config.speed}@{config.accel} Done

    RESTORE_GCODE_STATE NAME=STATE_ACCEL_TEST

[gcode_macro Motors_Off]
gcode:
    M84 X Y Z E

[gcode_macro heat_soak]
gcode:
    #STATUS_HEATING
    SET_LIGHT VALUE=1
    WLED_ON strip=rgb preset=2
    M106 S255
    M140 S115
    #SET_FAN_SPEED FAN=nevermore SPEED=1
    G28 XYZ
    Z_TILT_N_SCAN
    WLED_ON strip=rgb preset=5
    G1 Z5 X90 Y90 F2000

[gcode_macro fw_restart]
gcode:
    WLED_OFF strip=rgb
    FIRMWARE_RESTART

[gcode_macro PURGE_MOVE]
gcode:
    _entry_point function=PURGE_MOVE

	# Go to the purge bucket
	G0 X{printer["gcode_macro _purge_setup"].purge_x} Y{printer["gcode_macro _purge_setup"].purge_y} F5000

    _exit_point function=PURGE_MOVE

[gcode_macro _purge_setup]
# Purge location
variable_purge_x: -8
variable_purge_y: 114

# How many wipes (back and forward is 1)
# Assumes wiping in back and forward for stock K3 bucket.
variable_wiper_wipes: 3
variable_wipe_distance: 20
variable_wipe_direction: '+'   # + or - to determine which way to wipe first

gcode:

[gcode_macro PURGE]
gcode:
	{% set purge_amount = params.AMOUNT|default(5)|float  %}
	{% set purge_speed = params.SPEED|default(90)|float  %}

	PURGE_MOVE

	# Purge ze filament
	G92 E0
	G1 E{purge_amount} F{purge_speed}
	G92 E0

	# Tiny retract to stop oooooozing
	G1 E-.2 F2700
	G92 E0

	M400
	#SCRUB_NOZZLE

[gcode_macro testProbe]
gcode:
    G28
    z_tilt_adjust
    G28 Z
    BED_MESH_CALIBRATE
    G0 X90 Y90 Z50 F6000

[gcode_macro bacon_drip]
gcode:
    RESPOND TYPE=echo MSG="Measuring backlash in Z. Watch for splatter."
    beacon_estimate_backlash

[gcode_macro z_tilt_scan]
gcode:
    z_tilt_adjust RETRY_TOLERANCE=1
    z_tilt_adjust HORIZONTAL_MOVE_Z=1

[gcode_macro Beacon_Soak]
gcode:
    {% set BEACON_TARGET = params.BEACON_TARGET|default(70) %}
    {% set BEACON_MAXIMUM = params.BEACON_TARGET|int + 7 %}
    {% set EXTRUDER = params.EXTRUDER|default(260)|int - 60 %}
    {% set BED = params.BED|default(110) %}
    halo_preheat
    M106 S255
    G0 X90 Y90 Z0.5
    M104 S{EXTRUDER}
    RESPOND MSG="Heating Bed"
    M190 S{BED}
    {% if BEACON_TARGET|int > 0 %}
        RESPOND MSG="Cooking Bacon"
        TEMPERATURE_WAIT sensor="temperature_sensor beacon_coil" MINIMUM={BEACON_TARGET} ;MAXIMUM={BEACON_MAXIMUM}
        RESPOND MSG="Bacon is done"
    {% else %}
        RESPOND MSG="Skipping Bacon"
    {% endif %}

[gcode_macro Prime_Line]
gcode:
	G1 Z2 F6000
	G1 X-3  Y0  F12000
	G1 Z0.3
	G1 X55 E10 F1000
	G1 X90 E5 F1000
    G1 X120 E2 F1000
	G92 E0.0             ;set extruder to Zero
    #G0 X115 Y5 Z0.2 F9000         ; Move to start position
    #G92 E0                        ; Reset Extruder
    #G1 E5 F600                   ; Extrude a little
    #G1 X10 E20 F1000              ; Draw line
    #G92 E0                        ; Reset Extruder
    #G91                           ; relative positioning
    #G0 X50 F18000                 ; Wipe line 1
    #G0 X-40 F18000                ; Wipe line 2
    #G0 Z10 F1000                  ; Raise nozzle
    #G90

[gcode_macro Save_Probe_Offset]
gcode:
      Z_OFFSET_APPLY_PROBE

[gcode_macro Z_TILT_N_SCAN]
gcode:
      Z_TILT_ADJUST HORIZONTAL_MOVE_Z=10 RETRY_TOLERANCE=1
      Z_TILT_ADJUST HORIZONTAL_MOVE_Z=2
      G28 Z
